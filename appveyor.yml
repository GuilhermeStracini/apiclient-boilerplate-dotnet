version: 1.0.{build}
skip_tags: true
image: Visual Studio 2019
configuration: Release
skip_commits:
  message: /(Create|Update) .*\.(png|jpg|jpeg|bmp|gif|md)/

environment:
  SOLUTION_NAME: SolutionName 
  SONAR_TOKEN: 
    secure: <secure token from Sonar Cloud>
  GITHUB_TOKEN:
    secure: <secure token from Github>
  CODACY_PROJECT_TOKEN:
    secure: <secure token from Codacy>

dotnet_csproj: 
  patch: true 
  file: '**\*.csproj' 
  version: '{version}' 
  package_version: '{version}' 
  assembly_version: '{version}' 
  file_version: '{version}' 
  informational_version: '{version}' 
  
init:
- SET JAVA_HOME=C:\Program Files\Java\jdk15
- SET PATH=%JAVA_HOME%\bin;%PATH%
- set JAVA_HOME_11_X64=C:\Program Files\Java\jdk15

before_build:
- ps: $env:SONAR_PROJECT = "$env:APPVEYOR_REPO_NAME" -replace "/","_"
- ps: $env:SONAR_ORGANIZATION = "$env:APPVEYOR_REPO_NAME" -replace "/.*$","-github"
- cmd: nuget restore
- cmd: choco install opencover.portable
- cmd: choco install codecov
- cmd: curl -L https://github.com/codacy/codacy-coverage-reporter/releases/download/13.11.17/codacy-coverage-reporter-assembly.jar > ./codacy-test-reporter.jar
- cmd: dotnet tool install --global dotnet-sonarscanner

build:
  publish_nuget: true
  include_nuget_references: true
  parallel: true
  verbosity: normal

build_script:
- ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { &
        dotnet sonarscanner begin 
         /k:"$env:SONAR_PROJECT" 
         /o:"$env:SONAR_ORGANIZATION" 
         /d:sonar.branch.name="$env:APPVEYOR_REPO_BRANCH"
         /d:sonar.host.url="https://sonarcloud.io" 
         /d:sonar.login="$env:SONAR_TOKEN" 
         /v:"$env:APPVEYOR_BUILD_NUMBER" 
         /d:sonar.exclusions="**/bin/**/*,**/obj/**/*" 
         /d:sonar.coverage.exclusions="**/$env:SOLUTION_NAME.Tests/**,**/*Tests.cs" 
         /d:sonar.cs.opencover.reportsPaths="$env:CD\Tests\$env:SOLUTION_NAME.Tests\coverage.opencover.xml"
    }'
- ps: 'if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { &
        dotnet sonarscanner begin 
         /k:"$env:SONAR_PROJECT" 
         /o:"$env:SONAR_ORGANIZATION" 
         /d:sonar.pullrequest.key="$env:APPVEYOR_PULL_REQUEST_NUMBER"
         /d:sonar.host.url="https://sonarcloud.io" 
         /d:sonar.login="$env:SONAR_TOKEN" 
         /v:"$env:APPVEYOR_BUILD_NUMBER" 
         /d:sonar.exclusions="**/bin/**/*,**/obj/**/*" 
         /d:sonar.coverage.exclusions="**/$env:SOLUTION_NAME.Tests/**,**/*Tests.cs" 
         /d:sonar.cs.opencover.reportsPaths="$env:CD\Tests\$env:SOLUTION_NAME.Tests\coverage.opencover.xml"
    }'
- dotnet build %SOLUTION_NAME%.sln
- dotnet test .\Tests\%SOLUTION_NAME%.Tests\%SOLUTION_NAME%.Tests.csproj 
 /p:CollectCoverage=true 
 /p:CoverletOutputFormat="opencover"
- codecov -f "%CD%\Tests\%SOLUTION_NAME%.Tests\coverage.opencover.xml"
- java 
 -jar 
 ./codacy-test-reporter.jar report 
 -l CSharp 
 -t %CODACY_PROJECT_TOKEN% 
 -r "%CD%\Tests\%SOLUTION_NAME%.Tests\coverage.opencover.xml"
- dotnet sonarscanner end /d:sonar.login="%SONAR_TOKEN%"

after_build:
- xcopy %CD%\Src\%SOLUTION_NAME%\bin\Debug\net6.0\*.* %CD%\Build\
- copy %CD%\Src\%SOLUTION_NAME%\bin\Release\%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg
- rd /s /q %CD%\Src\%SOLUTION_NAME%\bin\Release\
- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.xml %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.UnitTests\*.json %CD%\Coverage\
- cd %CD%
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.zip" Build
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Coverage.zip" Coverage

artifacts:
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.zip
  name: ZipFile
  
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
  name: Package
  
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Coverage.zip
  name: Coverage

deploy:
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: Package
  
- provider: GitHub
  on:
   branch: main
  tag: $(appveyor_build_version)
  auth_token: $(GITHUB_TOKEN)
  force_update: true
  artifact: ZipFile
