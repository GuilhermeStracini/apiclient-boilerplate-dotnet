version: 1.0.{build}
skip_tags: true
image: Visual Studio 2019
configuration: Release
skip_commits:
  message: /(Create|Update).*\.(png|jpg|jpeg|bmp|gif|md)/
environment:
  SOLUTION_NAME: <solution name>  
  SONAR_PROJECT: <sonar cloud project name - something like: github_username_solution-name>
  SONAR_ORGANIZATION: <sonar cloud organization name - something like: github_username-github>
  SONAR_TOKEN: 
    secure: <secure token from SonarCloud>
  NUGET_TOKEN:
    secure: <secure token from NuGet>
dotnet_csproj: 
  patch: true 
  file: '**\*.csproj' 
  version: '{version}' 
  package_version: '{version}' 
  assembly_version: '{version}' 
  file_version: '{version}' 
  informational_version: '{version}' 
before_build:
- cmd: nuget restore
- cmd: choco install opencover.portable
- cmd: choco install codecov
build:
  publish_nuget: true
  include_nuget_references: true
  parallel: true
  verbosity: normal
build_script:
 - dotnet tool install --global dotnet-sonarscanner
 - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & 
  dotnet sonarscanner begin 
 /k:"$env:SONAR_PROJECT" 
 /o:"$env:SONAR_ORGANIZATION" 
 /d:sonar.host.url="https://sonarcloud.io" 
 /d:sonar.login="$env:SONAR_TOKEN" 
 /v:"$env:APPVEYOR_BUILD_NUMBER" 
 /d:sonar.exclusions="**/bin/**/*,**/obj/**/*" 
 /d:sonar.coverage.exclusions="**/$env:SOLUTION_NAME.Tests/**,**/*Tests.cs" 
 /d:sonar.cs.opencover.reportsPaths="$env:CD\Tests\$env:SOLUTION_NAME.Tests\coverage.opencover.xml" }'
 - dotnet build $env:SOLUTION_NAME.sln
 - ps: dotnet test .\Tests\$env:SOLUTION_NAME.Tests\$env:SOLUTION_NAME.Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat="opencover"
 - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet sonarscanner end /d:sonar.login="$env:SONAR_TOKEN" }'
 - codecov -f "Tests\$env:SOLUTION_NAME.Tests\coverage.opencover.xml"
after_build:
- xcopy %CD%\Src\$(SOLUTION_NAME)\bin\Release\netstandard2.1\*.* %CD%\Build\
- copy %CD%\Src\$(SOLUTION_NAME)\bin\Release\$(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
- rd /s /q %CD%\Src\$(SOLUTION_NAME)\bin\Release\
- cd %CD%
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.zip" Build
artifacts:
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.zip
  name: ZipFile
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
  name: Package
deploy:
- provider: Environment
  name: NuGet
  on:
   branch: master
  artifact: Package
- provider: GitHub
  on:
   branch: master
  tag: $(appveyor_build_version)
  auth_token: $(NUGET_TOKEN)
  force_update: true
  artifact: ZipFile
